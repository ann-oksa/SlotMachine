//
//  Counting.swift
//  SlotMachine
//
//  Created by Anna Oksanichenko on 21.10.2020.
//

import Foundation


/*
 –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è –≤—ã–∏–≥—Ä—ã—à–Ω—ã–º–∏, –∞ –∏–º–µ–Ω–Ω–æ:
 1) –î–∂–µ–∫-–ø–æ—Ç, –≤—Å–µ —Ç—Ä–∏ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä 2-2-2.
 2) –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è - —á–∏—Å–ª–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2-5-6
 3) –î–∞—É–Ω—Ö–∏–ª - —á–∏—Å–ª–∞ —É–±—ã–≤–∞—é—Ç —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 9-1-0
 4) —á–µ—Ç - –≤—Å–µ —á–∏—Å–ª–∞ —á–µ—Ç–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2-4-6
 5) –Ω–µ—á–µ—Ç - –≤—Å–µ —á–∏—Å–ª–∞ –Ω–µ—á–µ—Ç–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1-5-7
 6) —Å–≤—è—Ç–∞—è –ø—Ä–æ—Å—Ç–æ—Ç–∞ - —Å—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 2-4-1 –≤ —Å—É–º–º–µ 7
 7) –°—Ç–∞—Ä–∏–∫ –§–∏–±–æ–Ω–∞—á—á–∏ - —Å—É–º–º–∞ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —á–∏—Å–µ–ª —Ä–∞–≤–Ω–∞ —Ç—Ä–µ—Ç—å–µ–º—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 3-4-7, 3+4 = 7
 üòç –°–æ—Å–µ–¥–∏ - —á–∏—Å–ª–∞ —è–≤–ª—è—é—Ç—Å—è —Å–æ—Å–µ–¥—è–º–∏ –≤ —Ä—è–¥—É –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —á–∏—Å–µ–ª, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ—Ä—è–¥–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, 5-3-4
 */

let random = IntRandomizer()
var one = random.getRandomNumber()
var two  = random.getRandomNumber()
var three = random.getRandomNumber()
var msg = [String]()
var points = Int()

let costs : [String : Int] =
    ["Jackpot" : 100,
     "Increase" : 30,
     "Decrease" : 30,
     "Even" : 20,
     "Odd" : 20,
     "Fibonacci" : 55]

func new(){
    one = random.getRandomNumber()
    two  = random.getRandomNumber()
    three = random.getRandomNumber()
}

func play() {
    new()
    if one == two && two == three && three == one {
        points += costs["Jackpot"] ?? 0
        msg.append(Array(costs)[0].key)
    }
    if one < two && two < three && one < three {
        points += costs["Increase"] ?? 0
        msg.append(Array(costs)[1].key)
    }
    if one > two && two > three && one > three {
        points += costs["Decrease"] ?? 0
        msg.append(Array(costs)[2].key)
    }
    if one % 10 == 0 && two % 10 == 0 && three % 10 == 0 {
        points += costs["Even"] ?? 0
        msg.append(Array(costs)[3].key)
    }
    if one % 10 == 1 && two % 10 == 1 && three % 10 == 1 {
        points += costs["Odd"] ?? 0
        msg.append(Array(costs)[4].key)
    }
    if one+two == three {
        points += costs["Fibonacci"] ?? 0
        msg.append(Array(costs)[5].key)
    }
    
    
}

